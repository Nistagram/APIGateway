version: "3.8"
services:

  gateway:
    image: nginx:1.19.8-alpine
    ports:
      - 8080:8080
    networks:
      - backend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./api_gateway.conf:/etc/nginx/api_gateway.conf

  users:
    image: user-service
    build:
      context: ../Users #https://github.com/Nistagram/Users:compose_build
      dockerfile: Dockerfile
    networks:
      - backend
    environment:
      PORT: 8080 #${USER_SERVICE_PORT}
#  db:
#    command: '-d'
#    ports:
#      - 5432:5432

  location:
    image: location-service
    build:
      context: ../Location #https://github.com/Nistagram/Location:compose_build
      dockerfile: Dockerfile
    networks:
      - backend
    environment:
      PORT: 8080 #${LOCATION_SERVICE_PORT}

#  consumer-service:
#    image: consumer-service:compose_build
#    build:
#      context: ./consumer-service
#      dockerfile: Dockerfile
#    networks:
#      - backend
#    environment:
#      PORT: ${CONSUMER_SERVICE_PORT}
#
#  order-service:
#    image: order-service:compose_build
#    build:
#      context: ./order-service
#      dockerfile: Dockerfile
#    networks:
#      - backend
#    environment:
#      CONSUMER_SERVICE_DOMAIN: ${CONSUMER_SERVICE_DOMAIN}
#      CONSUMER_SERVICE_PORT: ${CONSUMER_SERVICE_PORT}
#      KITCHEN_SERVICE_DOMAIN: ${KITCHEN_SERVICE_DOMAIN}
#      KITCHEN_SERVICE_PORT: ${KITCHEN_SERVICE_PORT}
#      PORT: ${ORDER_SERVICE_PORT}
#
#  kitchen-service:
#    image: kitchen-service:compose_build
#    build:
#      context: ./kitchen-service
#      dockerfile: Dockerfile
#    networks:
#      - backend
#    environment:
#      ORDER_SERVICE_DOMAIN: ${ORDER_SERVICE_DOMAIN}
#      ORDER_SERVICE_PORT: ${ORDER_SERVICE_PORT}
#      PORT: ${KITCHEN_SERVICE_PORT}


networks:
  backend:
    name: nistagram
    driver: bridge
