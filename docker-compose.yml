version: "3.9"
services: 
    gateway: 
        build: .
        image: hesoyam/gateway:latest
        container_name: gateway
        restart: on-failure
        ports:
            - ${GATEWAY_PORT}:${GATEWAY_PORT}
        environment: 
            ADVERTISEMENT_HOST: advertisement 
            ADVERTISEMENT_PORT: ${ADVERTISEMENT_PORT}
            CONTENT_HOST: content
            CONTENT_PORT: ${CONTENT_PORT}
            LOCATION_HOST: location
            LOCATION_PORT: ${LOCATION_PORT}
            MESSAGING_HOST: messaging
            MESSAGING_PORT: ${MESSAGING_PORT}
            USERS_HOST: users
            USERS_PORT: ${USERS_PORT}
    advertisement:
        build: ../Advertisement
        image: hesoyam/advertisement:latest
        container_name: advertisement
        restart: on-failure
        environment: 
            PORT: ${ADVERTISEMENT_PORT}
            DB_PORT: ${POSTGRES_PORT}
            DB_HOST: advertisementdb
            DB_USER: ${POSTGRES_USER}
            DB_PASSWORD: ${POSTGRES_PASSWORD}
            DB_NAME: ${ADVERTISEMENT_DB_NAME}
        depends_on: 
            - advertisementdb
    advertisementdb:
        image: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${ADVERTISEMENT_DB_NAME}
        volumes:
            - advertisement-db:/var/lib/postgresql/data
    content:
        build: ../Content
        image: hesoyam/content:latest
        container_name: content
        restart: on-failure
        environment: 
            PORT: ${CONTENT_PORT}
            DB_PORT: ${POSTGRES_PORT}
            DB_HOST: contentdb
            DB_USER: ${POSTGRES_USER}
            DB_PASSWORD: ${POSTGRES_PASSWORD}
            DB_NAME: ${CONTENT_DB_NAME}
        depends_on: 
            - contentdb
    contentdb:
        image: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${CONTENT_DB_NAME}
        volumes:
            - content-db:/var/lib/postgresql/data
    location:
        build: ../Location
        image: hesoyam/location:latest
        container_name: location
        restart: on-failure
        environment: 
            PORT: ${LOCATION_PORT}
            DB_PORT: ${POSTGRES_PORT}
            DB_HOST: locationdb
            DB_USER: ${POSTGRES_USER}
            DB_PASSWORD: ${POSTGRES_PASSWORD}
            DB_NAME: ${LOCATION_DB_NAME}
        depends_on: 
            - locationdb
    locationdb:
        image: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${LOCATION_DB_NAME}
        volumes:
            - location-db:/var/lib/postgresql/data
    messaging:
        build: ../Messaging
        image: hesoyam/messaging:latest
        container_name: messaging
        restart: on-failure
        environment: 
            PORT: ${MESSAGING_PORT}
            DB_PORT: ${POSTGRES_PORT}
            DB_HOST: messagingdb
            DB_USER: ${POSTGRES_USER}
            DB_PASSWORD: ${POSTGRES_PASSWORD}
            DB_NAME: ${MESSAGING_DB_NAME}
        depends_on: 
            - messagingdb
    messagingdb:
        image: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${MESSAGING_DB_NAME}
        volumes:
            - messaging-db:/var/lib/postgresql/data
    users:
        build: ../Users
        image: hesoyam/users:latest
        container_name: users
        restart: on-failure
        environment: 
            PORT: ${USERS_PORT}
            DB_PORT: ${POSTGRES_PORT}
            DB_HOST: usersdb
            DB_USER: ${POSTGRES_USER}
            DB_PASSWORD: ${POSTGRES_PASSWORD}
            DB_NAME: ${USERS_DB_NAME}
            JWT_SECRET: 12345
            JWT_TOKEN_LIFE_LENGTH: 24
        depends_on: 
            - usersdb
    usersdb:
        image: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${USERS_DB_NAME}
        volumes:
            - users-db:/var/lib/postgresql/data
    webshop:
        build: ../WebShop
        image: hesoyam/webshop:latest
        container_name: webshop
        restart: on-failure
        environment: 
            PORT: ${WEBSHOP_PORT}
            DB_PORT: ${POSTGRES_PORT}
            DB_HOST: webshopdb
            DB_USER: ${POSTGRES_USER}
            DB_PASSWORD: ${POSTGRES_PASSWORD}
            DB_NAME: ${WEBSHOP_DB_NAME}
        depends_on: 
            - webshopdb
    webshopdb:
        image: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${WEBSHOP_DB_NAME}
        volumes:
            - webshop-db:/var/lib/postgresql/data
    nistagramfront:
        build: ../nistagram-front
        image: hesoyam/nistagramfront:latest
        container_name: nistagramfront
        restart: on-failure
        environment: 
            PORT: 80
            # API GATEWAY URL AND PORT POSSIBLY
        ports: 
            - ${NISTAGRAM_FRONT_PORT}:80
    webshopfront:
        build: ../webshop-front
        image: hesoyam/webshopfront:latest
        container_name: webshopfront
        restart: on-failure
        environment: 
            PORT: 80
            # API GATEWAY URL AND PORT POSSIBLY
            # WEBSHOP BACKEND URL AND PORT POSSIBLY
        ports: 
            - ${WEBSHOP_FRONT_PORT}:80
volumes: 
    advertisement-db:
    content-db:
    location-db:
    messaging-db:
    users-db:
    webshop-db:

    