version: "3.8"
services:

  gateway:
    image: nginx:1.19.8-alpine
    ports:
      - 8080:8080
    networks:
      - backend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./api_gateway.conf:/etc/nginx/api_gateway.conf
    #restart: always
#    volumes_from:
#      - users
    depends_on:
      - users
      - location

  users:
    image: user-service
    build:
      context: ../Users #https://github.com/Nistagram/Users:compose_build
      dockerfile: Dockerfile
    networks:
      - backend
    environment:
      PORT: 8080 #${USER_SERVICE_PORT}
    depends_on:
      - users-db

  users-db:
    image: postgres
    container_name: users_db
    restart: always
    networks:
      - backend
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: users
    volumes:
      - user_db-data:/var/lib/postgres

  location:
    image: location-service
    build:
      context: ../Location #https://github.com/Nistagram/Location:compose_build
      dockerfile: Dockerfile
    networks:
      - backend
    environment:
      PORT: 8080 #${LOCATION_SERVICE_PORT}

  location-db:
    image: postgres
    container_name: location_db
    restart: always
    networks:
      - backend
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: location
    volumes:
      - location_db-data:/var/lib/postgres

networks:
  backend:
    name: nistagram
    driver: bridge

volumes:
  user_db-data:
    name: user_db-data
  location_db-data:
    name: location_db-data